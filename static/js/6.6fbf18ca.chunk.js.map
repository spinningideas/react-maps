{"version":3,"sources":["models/Country.ts","models/FeatureCollection.ts","services/GeoDataService.ts","pages/WorldMap.tsx"],"names":["Country","countryName","countryCode","countryCode3","FeatureCollection","type","features","GeoDataService","getMapDataGeoUSStates","selectedStateName","a","fetch","then","result","json","d","featureCollection","stateData","default","filter","f","properties","name","length","sd","push","Promise","resolve","results","getMapDataGeoCountries","selectedCountryName","countryData","c","cl","cd","getStatesData","Object","values","s","stateCode","getState","featuresCollection","state","getStateProvinceData","selectedCountryCode","selectedStateCode","val","replace","w","toUpperCase","slice","toLowerCase","country","this","getDefaultCountryCode","code","countries","getCountries","codeUpper","i","nameLower","code3","getCountryFromCountryCode3","WorldMap","useState","geoData","setGeoData","mapTooltipContent","setMapTooltipContent","geoDataService","useEffect","data","loadData","projection","geography","geographies","map","geo","stroke","fill","onMouseEnter","countrycode","onMouseLeave","style","outline","hover","pressed","rsmKey"],"mappings":"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","file":"static/js/6.6fbf18ca.chunk.js","sourcesContent":["export class Country {\r\n\tpublic countryName: string = \"\";\r\n\tpublic countryCode: string = \"\";\r\n\tpublic countryCode3: string = \"\";\r\n}","import { Feature } from \"models/Feature\";\r\n\r\nexport class FeatureCollection {\r\n\tpublic type: string = \"FeatureCollection\";\r\n  public features: Feature[] = [];\r\n}","import { Country } from \"models/Country\";\r\nimport { FeatureCollection } from \"models/FeatureCollection\";\r\n\r\nexport class GeoDataService {\r\n  convertToPascalCase(val: string) {\r\n    // returns val in \"PascalCase\" (first char upper, rest lowered)\r\n    return (val = val.replace(/\\w+/g, (w) => {\r\n      return w[0].toUpperCase() + w.slice(1).toLowerCase();\r\n    }));\r\n  }\r\n\r\n  convertToKebabCase(val: string): string {\r\n    if (val) {\r\n      // returns val in \"kebab-case\" lowered\r\n      let kebab = val.replace(/\\s+/g, \"-\").replace(\".\", \"\").toLowerCase();\r\n      return kebab;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  convertToSnakeCase(val: string): string {\r\n    if (val) {\r\n      // returns val in \"snake_case\" lowered\r\n      let snakeCase: string = val\r\n        .replace(/\\s+/g, \"_\")\r\n        .replace(\".\", \"\")\r\n        .toLowerCase();\r\n      return snakeCase;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getDefaultCountryCode() {\r\n    return \"US\";\r\n  }\r\n\r\n  getDefaultCountry() {\r\n    let country = new Country();\r\n    country.countryCode = this.getDefaultCountryCode();\r\n    country.countryName = \"United States\";\r\n    return country;\r\n  }\r\n\r\n  getCountryFromCode(code: string) {\r\n    let countries = this.getCountries();\r\n    let codeUpper = code.toUpperCase();\r\n    for (let i = 0; i < countries.length; i++) {\r\n      if (countries[i].countryCode === codeUpper) {\r\n        return countries[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCountryNameFromCode(code: string) {\r\n    let countries = this.getCountries();\r\n    let codeUpper = code.toUpperCase();\r\n    for (let i = 0; i < countries.length; i++) {\r\n      if (\r\n        countries[i].countryName &&\r\n        countries[i].countryCode &&\r\n        countries[i].countryCode === codeUpper\r\n      ) {\r\n        return countries[i].countryName;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCountryCodeFromName(name: string) {\r\n    let countries = this.getCountries();\r\n    let nameLower = name.toLowerCase();\r\n    for (let i = 0; i < countries.length; i++) {\r\n      if (\r\n        countries[i].countryName &&\r\n        countries[i].countryName.toLowerCase() === nameLower\r\n      ) {\r\n        return countries[i].countryCode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCountryCode3FromCountryCode(code: string) {\r\n    let countries = this.getCountries();\r\n    let codeUpper = code.toUpperCase();\r\n    for (let i = 0; i < countries.length; i++) {\r\n      if (countries[i].countryCode === codeUpper) {\r\n        return countries[i].countryCode3;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCountryFromCountryCode3(code3: string) {\r\n    let countries = this.getCountries();\r\n    for (let i = 0; i < countries.length; i++) {\r\n      if (countries[i].countryCode3.toLowerCase() === code3.toLowerCase()) {\r\n        return countries[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCountryCodeFromCountryCode3(code3: string) {\r\n    let country = this.getCountryFromCountryCode3(code3);\r\n    return country && country.countryCode ? country.countryCode : null;\r\n  }\r\n\r\n  getCountries() {\r\n    // Static dataset of subset of countries\r\n    return [\r\n      {\r\n        countryCode: \"AF\",\r\n        countryCode3: \"AFG\",\r\n        countryName: \"Afghanistan\",\r\n      },\r\n      {\r\n        countryCode: \"AL\",\r\n        countryCode3: \"ALB\",\r\n        countryName: \"Albania\",\r\n      },\r\n      {\r\n        countryCode: \"DZ\",\r\n        countryCode3: \"DZA\",\r\n        countryName: \"Algeria\",\r\n      },\r\n      {\r\n        countryCode: \"AO\",\r\n        countryCode3: \"AGO\",\r\n        countryName: \"Angola\",\r\n      },\r\n      {\r\n        countryCode: \"AR\",\r\n        countryCode3: \"ARG\",\r\n        countryName: \"Argentina\",\r\n      },\r\n      {\r\n        countryCode: \"AM\",\r\n        countryCode3: \"ARM\",\r\n        countryName: \"Armenia\",\r\n      },\r\n      {\r\n        countryCode: \"AW\",\r\n        countryCode3: \"ABW\",\r\n        countryName: \"Aruba\",\r\n      },\r\n      {\r\n        countryCode: \"AU\",\r\n        countryCode3: \"AUS\",\r\n        countryName: \"Australia\",\r\n      },\r\n      {\r\n        countryCode: \"AT\",\r\n        countryCode3: \"AUT\",\r\n        countryName: \"Austria\",\r\n      },\r\n      {\r\n        countryCode: \"BS\",\r\n        countryCode3: \"BHS\",\r\n        countryName: \"Bahamas\",\r\n      },\r\n      {\r\n        countryCode: \"BB\",\r\n        countryCode3: \"BRB\",\r\n        countryName: \"Barbados\",\r\n      },\r\n      {\r\n        countryCode: \"BY\",\r\n        countryCode3: \"BLR\",\r\n        countryName: \"Belarus\",\r\n      },\r\n      {\r\n        countryCode: \"BE\",\r\n        countryCode3: \"BEL\",\r\n        countryName: \"Belgium\",\r\n      },\r\n      {\r\n        countryCode: \"BZ\",\r\n        countryCode3: \"BLZ\",\r\n        countryName: \"Belize\",\r\n      },\r\n      {\r\n        countryCode: \"BJ\",\r\n        countryCode3: \"BEN\",\r\n        countryName: \"Benin\",\r\n      },\r\n      {\r\n        countryCode: \"BM\",\r\n        countryCode3: \"BMU\",\r\n        countryName: \"Bermuda\",\r\n      },\r\n      {\r\n        countryCode: \"BT\",\r\n        countryCode3: \"BTN\",\r\n        countryName: \"Bhutan\",\r\n      },\r\n      {\r\n        countryCode: \"BO\",\r\n        countryCode3: \"BOL\",\r\n        countryName: \"Bolivia\",\r\n      },\r\n      {\r\n        countryCode: \"BW\",\r\n        countryCode3: \"BWA\",\r\n        countryName: \"Botswana\",\r\n      },\r\n      {\r\n        countryCode: \"BR\",\r\n        countryCode3: \"BRA\",\r\n        countryName: \"Brazil\",\r\n      },\r\n      {\r\n        countryCode: \"BG\",\r\n        countryCode3: \"BGR\",\r\n        countryName: \"Bulgaria\",\r\n      },\r\n      {\r\n        countryCode: \"KH\",\r\n        countryCode3: \"KHM\",\r\n        countryName: \"Cambodia\",\r\n      },\r\n      {\r\n        countryCode: \"CM\",\r\n        countryCode3: \"CMR\",\r\n        countryName: \"Cameroon\",\r\n      },\r\n      {\r\n        countryCode: \"CA\",\r\n        countryCode3: \"CAN\",\r\n        countryName: \"Canada\",\r\n      },\r\n      {\r\n        countryCode: \"KY\",\r\n        countryCode3: \"CYM\",\r\n        countryName: \"Cayman Islands\",\r\n      },\r\n      {\r\n        countryCode: \"CF\",\r\n        countryCode3: \"CAF\",\r\n        countryName: \"Central African Republic\",\r\n      },\r\n      {\r\n        countryCode: \"TD\",\r\n        countryCode3: \"TCD\",\r\n        countryName: \"Chad\",\r\n      },\r\n      {\r\n        countryCode: \"CL\",\r\n        countryCode3: \"CHL\",\r\n        countryName: \"Chile\",\r\n      },\r\n      {\r\n        countryCode: \"CN\",\r\n        countryCode3: \"CHN\",\r\n        countryName: \"China\",\r\n      },\r\n      {\r\n        countryCode: \"CO\",\r\n        countryCode3: \"COL\",\r\n        countryName: \"Colombia\",\r\n      },\r\n      {\r\n        countryCode: \"KM\",\r\n        countryCode3: \"COM\",\r\n        countryName: \"Comoros\",\r\n      },\r\n      {\r\n        countryCode: \"CR\",\r\n        countryCode3: \"CRI\",\r\n        countryName: \"Costa Rica\",\r\n      },\r\n      {\r\n        countryCode: \"HR\",\r\n        countryCode3: \"HRV\",\r\n        countryName: \"Croatia\",\r\n      },\r\n      {\r\n        countryCode: \"CU\",\r\n        countryCode3: \"CUB\",\r\n        countryName: \"Cuba\",\r\n      },\r\n      {\r\n        countryCode: \"CY\",\r\n        countryCode3: \"CYP\",\r\n        countryName: \"Cyprus\",\r\n      },\r\n      {\r\n        countryCode: \"CZ\",\r\n        countryCode3: \"CZE\",\r\n        countryName: \"Czechia\",\r\n      },\r\n      {\r\n        countryCode: \"DK\",\r\n        countryCode3: \"DNK\",\r\n        countryName: \"Denmark\",\r\n      },\r\n      {\r\n        countryCode: \"DO\",\r\n        countryCode3: \"DOM\",\r\n        countryName: \"Dominican Republic\",\r\n      },\r\n      {\r\n        countryCode: \"EC\",\r\n        countryCode3: \"ECU\",\r\n        countryName: \"Ecuador\",\r\n      },\r\n      {\r\n        countryCode: \"EG\",\r\n        countryCode3: \"EGY\",\r\n        countryName: \"Egypt\",\r\n      },\r\n      {\r\n        countryCode: \"SV\",\r\n        countryCode3: \"SLV\",\r\n        countryName: \"El Salvador\",\r\n      },\r\n      {\r\n        countryCode: \"ET\",\r\n        countryCode3: \"ETH\",\r\n        countryName: \"Ethiopia\",\r\n      },\r\n      {\r\n        countryCode: \"FJ\",\r\n        countryCode3: \"FJI\",\r\n        countryName: \"Fiji\",\r\n      },\r\n      {\r\n        countryCode: \"FI\",\r\n        countryCode3: \"FIN\",\r\n        countryName: \"Finland\",\r\n      },\r\n      {\r\n        countryCode: \"FR\",\r\n        countryCode3: \"FRA\",\r\n        countryName: \"France\",\r\n      },\r\n      {\r\n        countryCode: \"PF\",\r\n        countryCode3: \"PYF\",\r\n        countryName: \"French Polynesia\",\r\n      },\r\n      {\r\n        countryCode: \"GA\",\r\n        countryCode3: \"GAB\",\r\n        countryName: \"Gabon\",\r\n      },\r\n      {\r\n        countryCode: \"GM\",\r\n        countryCode3: \"GMB\",\r\n        countryName: \"Gambia\",\r\n      },\r\n      {\r\n        countryCode: \"GE\",\r\n        countryCode3: \"GEO\",\r\n        countryName: \"Georgia\",\r\n      },\r\n      {\r\n        countryCode: \"DE\",\r\n        countryCode3: \"DEU\",\r\n        countryName: \"Germany\",\r\n      },\r\n      {\r\n        countryCode: \"GH\",\r\n        countryCode3: \"GHA\",\r\n        countryName: \"Ghana\",\r\n      },\r\n      {\r\n        countryCode: \"GR\",\r\n        countryCode3: \"GRC\",\r\n        countryName: \"Greece\",\r\n      },\r\n      {\r\n        countryCode: \"GU\",\r\n        countryCode3: \"GUM\",\r\n        countryName: \"Guam\",\r\n      },\r\n      {\r\n        countryCode: \"GT\",\r\n        countryCode3: \"GTM\",\r\n        countryName: \"Guatemala\",\r\n      },\r\n      {\r\n        countryCode: \"HT\",\r\n        countryCode3: \"HTI\",\r\n        countryName: \"Haiti\",\r\n      },\r\n      {\r\n        countryCode: \"HN\",\r\n        countryCode3: \"HND\",\r\n        countryName: \"Honduras\",\r\n      },\r\n      {\r\n        countryCode: \"HK\",\r\n        countryCode3: \"HKG\",\r\n        countryName: \"Hong Kong\",\r\n      },\r\n      {\r\n        countryCode: \"HU\",\r\n        countryCode3: \"HUN\",\r\n        countryName: \"Hungary\",\r\n      },\r\n      {\r\n        countryCode: \"IS\",\r\n        countryCode3: \"ISL\",\r\n        countryName: \"Iceland\",\r\n      },\r\n      {\r\n        countryCode: \"IN\",\r\n        countryCode3: \"IND\",\r\n        countryName: \"India\",\r\n      },\r\n      {\r\n        countryCode: \"ID\",\r\n        countryCode3: \"IDN\",\r\n        countryName: \"Indonesia\",\r\n      },\r\n      {\r\n        countryCode: \"IR\",\r\n        countryCode3: \"IRN\",\r\n        countryName: \"Iran\",\r\n      },\r\n      {\r\n        countryCode: \"IQ\",\r\n        countryCode3: \"IRQ\",\r\n        countryName: \"Iraq\",\r\n      },\r\n      {\r\n        countryCode: \"IE\",\r\n        countryCode3: \"IRL\",\r\n        countryName: \"Ireland\",\r\n      },\r\n      {\r\n        countryCode: \"IL\",\r\n        countryCode3: \"ISR\",\r\n        countryName: \"Israel\",\r\n      },\r\n      {\r\n        countryCode: \"IT\",\r\n        countryCode3: \"ITA\",\r\n        countryName: \"Italy\",\r\n      },\r\n      {\r\n        countryCode: \"CI\",\r\n        countryCode3: \"CIV\",\r\n        countryName: \"Ivory Coast\",\r\n      },\r\n      {\r\n        countryCode: \"JM\",\r\n        countryCode3: \"JAM\",\r\n        countryName: \"Jamaica\",\r\n      },\r\n      {\r\n        countryCode: \"JP\",\r\n        countryCode3: \"JPN\",\r\n        countryName: \"Japan\",\r\n      },\r\n      {\r\n        countryCode: \"JO\",\r\n        countryCode3: \"JOR\",\r\n        countryName: \"Jordan\",\r\n      },\r\n      {\r\n        countryCode: \"KE\",\r\n        countryCode3: \"KEN\",\r\n        countryName: \"Kenya\",\r\n      },\r\n      {\r\n        countryCode: \"KW\",\r\n        countryCode3: \"KWT\",\r\n        countryName: \"Kuwait\",\r\n      },\r\n      {\r\n        countryCode: \"LA\",\r\n        countryCode3: \"LAO\",\r\n        countryName: \"Laos\",\r\n      },\r\n      {\r\n        countryCode: \"LB\",\r\n        countryCode3: \"LBN\",\r\n        countryName: \"Lebanon\",\r\n      },\r\n      {\r\n        countryCode: \"LT\",\r\n        countryCode3: \"LTU\",\r\n        countryName: \"Lithuania\",\r\n      },\r\n      {\r\n        countryCode: \"LU\",\r\n        countryCode3: \"LUX\",\r\n        countryName: \"Luxembourg\",\r\n      },\r\n      {\r\n        countryCode: \"MG\",\r\n        countryCode3: \"MDG\",\r\n        countryName: \"Madagascar\",\r\n      },\r\n      {\r\n        countryCode: \"MW\",\r\n        countryCode3: \"MWI\",\r\n        countryName: \"Malawi\",\r\n      },\r\n      {\r\n        countryCode: \"MY\",\r\n        countryCode3: \"MYS\",\r\n        countryName: \"Malaysia\",\r\n      },\r\n      {\r\n        countryCode: \"MV\",\r\n        countryCode3: \"MDV\",\r\n        countryName: \"Maldives\",\r\n      },\r\n      {\r\n        countryCode: \"ML\",\r\n        countryCode3: \"MLI\",\r\n        countryName: \"Mali\",\r\n      },\r\n      {\r\n        countryCode: \"MT\",\r\n        countryCode3: \"MLT\",\r\n        countryName: \"Malta\",\r\n      },\r\n      {\r\n        countryCode: \"MQ\",\r\n        countryCode3: \"MTQ\",\r\n        countryName: \"Martinique\",\r\n      },\r\n      {\r\n        countryCode: \"MR\",\r\n        countryCode3: \"MRT\",\r\n        countryName: \"Mauritania\",\r\n      },\r\n      {\r\n        countryCode: \"MX\",\r\n        countryCode3: \"MEX\",\r\n        countryName: \"Mexico\",\r\n      },\r\n      {\r\n        countryCode: \"ME\",\r\n        countryCode3: \"MNE\",\r\n        countryName: \"Montenegro\",\r\n      },\r\n      {\r\n        countryCode: \"MA\",\r\n        countryCode3: \"MAR\",\r\n        countryName: \"Morocco\",\r\n      },\r\n      {\r\n        countryCode: \"MZ\",\r\n        countryCode3: \"MOZ\",\r\n        countryName: \"Mozambique\",\r\n      },\r\n      {\r\n        countryCode: \"MM\",\r\n        countryCode3: \"MMR\",\r\n        countryName: \"Myanmar [Burma]\",\r\n      },\r\n      {\r\n        countryCode: \"NA\",\r\n        countryCode3: \"NAM\",\r\n        countryName: \"Namibia\",\r\n      },\r\n      {\r\n        countryCode: \"NP\",\r\n        countryCode3: \"NPL\",\r\n        countryName: \"Nepal\",\r\n      },\r\n      {\r\n        countryCode: \"NL\",\r\n        countryCode3: \"NLD\",\r\n        countryName: \"Netherlands\",\r\n      },\r\n      {\r\n        countryCode: \"NC\",\r\n        countryCode3: \"NCL\",\r\n        countryName: \"New Caledonia\",\r\n      },\r\n      {\r\n        countryCode: \"NZ\",\r\n        countryCode3: \"NZL\",\r\n        countryName: \"New Zealand\",\r\n      },\r\n      {\r\n        countryCode: \"NI\",\r\n        countryCode3: \"NIC\",\r\n        countryName: \"Nicaragua\",\r\n      },\r\n      {\r\n        countryCode: \"NE\",\r\n        countryCode3: \"NER\",\r\n        countryName: \"Niger\",\r\n      },\r\n      {\r\n        countryCode: \"NG\",\r\n        countryCode3: \"NGA\",\r\n        countryName: \"Nigeria\",\r\n      },\r\n      {\r\n        countryCode: \"NO\",\r\n        countryCode3: \"NOR\",\r\n        countryName: \"Norway\",\r\n      },\r\n      {\r\n        countryCode: \"OM\",\r\n        countryCode3: \"OMN\",\r\n        countryName: \"Oman\",\r\n      },\r\n      {\r\n        countryCode: \"PK\",\r\n        countryCode3: \"PAK\",\r\n        countryName: \"Pakistan\",\r\n      },\r\n      {\r\n        countryCode: \"PA\",\r\n        countryCode3: \"PAN\",\r\n        countryName: \"Panama\",\r\n      },\r\n      {\r\n        countryCode: \"PG\",\r\n        countryCode3: \"PNG\",\r\n        countryName: \"Papua New Guinea\",\r\n      },\r\n      {\r\n        countryCode: \"PY\",\r\n        countryCode3: \"PRY\",\r\n        countryName: \"Paraguay\",\r\n      },\r\n      {\r\n        countryCode: \"PE\",\r\n        countryCode3: \"PER\",\r\n        countryName: \"Peru\",\r\n      },\r\n      {\r\n        countryCode: \"PH\",\r\n        countryCode3: \"PHL\",\r\n        countryName: \"Philippines\",\r\n      },\r\n      {\r\n        countryCode: \"PL\",\r\n        countryCode3: \"POL\",\r\n        countryName: \"Poland\",\r\n      },\r\n      {\r\n        countryCode: \"PT\",\r\n        countryCode3: \"PRT\",\r\n        countryName: \"Portugal\",\r\n      },\r\n      {\r\n        countryCode: \"QA\",\r\n        countryCode3: \"QAT\",\r\n        countryName: \"Qatar\",\r\n      },\r\n      {\r\n        countryCode: \"RO\",\r\n        countryCode3: \"ROU\",\r\n        countryName: \"Romania\",\r\n      },\r\n      {\r\n        countryCode: \"RU\",\r\n        countryCode3: \"RUS\",\r\n        countryName: \"Russia\",\r\n      },\r\n      {\r\n        countryCode: \"RW\",\r\n        countryCode3: \"RWA\",\r\n        countryName: \"Rwanda\",\r\n      },\r\n      {\r\n        countryCode: \"WS\",\r\n        countryCode3: \"WSM\",\r\n        countryName: \"Samoa\",\r\n      },\r\n      {\r\n        countryCode: \"SA\",\r\n        countryCode3: \"SAU\",\r\n        countryName: \"Saudi Arabia\",\r\n      },\r\n      {\r\n        countryCode: \"SN\",\r\n        countryCode3: \"SEN\",\r\n        countryName: \"Senegal\",\r\n      },\r\n      {\r\n        countryCode: \"RS\",\r\n        countryCode3: \"SRB\",\r\n        countryName: \"Serbia\",\r\n      },\r\n      {\r\n        countryCode: \"SC\",\r\n        countryCode3: \"SYC\",\r\n        countryName: \"Seychelles\",\r\n      },\r\n      {\r\n        countryCode: \"SL\",\r\n        countryCode3: \"SLE\",\r\n        countryName: \"Sierra Leone\",\r\n      },\r\n      {\r\n        countryCode: \"SG\",\r\n        countryCode3: \"SGP\",\r\n        countryName: \"Singapore\",\r\n      },\r\n      {\r\n        countryCode: \"SK\",\r\n        countryCode3: \"SVK\",\r\n        countryName: \"Slovakia\",\r\n      },\r\n      {\r\n        countryCode: \"SI\",\r\n        countryCode3: \"SVN\",\r\n        countryName: \"Slovenia\",\r\n      },\r\n      {\r\n        countryCode: \"SO\",\r\n        countryCode3: \"SOM\",\r\n        countryName: \"Somalia\",\r\n      },\r\n      {\r\n        countryCode: \"ZA\",\r\n        countryCode3: \"ZAF\",\r\n        countryName: \"South Africa\",\r\n      },\r\n      {\r\n        countryCode: \"KR\",\r\n        countryCode3: \"KOR\",\r\n        countryName: \"South Korea\",\r\n      },\r\n      {\r\n        countryCode: \"ES\",\r\n        countryCode3: \"ESP\",\r\n        countryName: \"Spain\",\r\n      },\r\n      {\r\n        countryCode: \"LK\",\r\n        countryCode3: \"LKA\",\r\n        countryName: \"Sri Lanka\",\r\n      },\r\n      {\r\n        countryCode: \"SD\",\r\n        countryCode3: \"SDN\",\r\n        countryName: \"Sudan\",\r\n      },\r\n      {\r\n        countryCode: \"SR\",\r\n        countryCode3: \"SUR\",\r\n        countryName: \"Suriname\",\r\n      },\r\n      {\r\n        countryCode: \"SE\",\r\n        countryCode3: \"SWE\",\r\n        countryName: \"Sweden\",\r\n      },\r\n      {\r\n        countryCode: \"CH\",\r\n        countryCode3: \"CHE\",\r\n        countryName: \"Switzerland\",\r\n      },\r\n      {\r\n        countryCode: \"SY\",\r\n        countryCode3: \"SYR\",\r\n        countryName: \"Syria\",\r\n      },\r\n      {\r\n        countryCode: \"TW\",\r\n        countryCode3: \"TWN\",\r\n        countryName: \"Taiwan\",\r\n      },\r\n      {\r\n        countryCode: \"TZ\",\r\n        countryCode3: \"TZA\",\r\n        countryName: \"Tanzania\",\r\n      },\r\n      {\r\n        countryCode: \"TH\",\r\n        countryCode3: \"THA\",\r\n        countryName: \"Thailand\",\r\n      },\r\n      {\r\n        countryCode: \"TN\",\r\n        countryCode3: \"TUN\",\r\n        countryName: \"Tunisia\",\r\n      },\r\n      {\r\n        countryCode: \"TR\",\r\n        countryCode3: \"TUR\",\r\n        countryName: \"Turkey\",\r\n      },\r\n      {\r\n        countryCode: \"UG\",\r\n        countryCode3: \"UGA\",\r\n        countryName: \"Uganda\",\r\n      },\r\n      {\r\n        countryCode: \"UA\",\r\n        countryCode3: \"UKR\",\r\n        countryName: \"Ukraine\",\r\n      },\r\n      {\r\n        countryCode: \"GB\",\r\n        countryCode3: \"GBR\",\r\n        countryName: \"United Kingdom\",\r\n      },\r\n      {\r\n        countryCode: \"US\",\r\n        countryCode3: \"USA\",\r\n        countryName: \"United States\",\r\n      },\r\n      {\r\n        countryCode: \"UY\",\r\n        countryCode3: \"URY\",\r\n        countryName: \"Uruguay\",\r\n      },\r\n      {\r\n        countryCode: \"VE\",\r\n        countryCode3: \"VEN\",\r\n        countryName: \"Venezuela\",\r\n      },\r\n      {\r\n        countryCode: \"VN\",\r\n        countryCode3: \"VNM\",\r\n        countryName: \"Vietnam\",\r\n      },\r\n      {\r\n        countryCode: \"YE\",\r\n        countryCode3: \"YEM\",\r\n        countryName: \"Yemen\",\r\n      },\r\n      {\r\n        countryCode: \"ZM\",\r\n        countryCode3: \"ZMB\",\r\n        countryName: \"Zambia\",\r\n      },\r\n      {\r\n        countryCode: \"ZW\",\r\n        countryCode3: \"ZWE\",\r\n        countryName: \"Zimbabwe\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  getMapDataGeoUSStates = async (selectedStateName?: string) => {\r\n    if (selectedStateName) {\r\n      return await fetch(\"data/us-states-geo.json\")\r\n        .then((result) => result.json())\r\n        .then((d: any) => {\r\n          let featureCollection = new FeatureCollection();\r\n          let stateData = d.default.features.filter((f: any) => {\r\n            return f.properties.name === selectedStateName;\r\n          });\r\n          if (stateData && stateData.length > 0) {\r\n            let sd = stateData[0] as any;\r\n            featureCollection.features.push(sd);\r\n          }\r\n          return new Promise((resolve) => {\r\n            resolve(featureCollection);\r\n          });\r\n        });\r\n    } else {\r\n      let results = await fetch(\"data/us-states-geo.json\").then((result) =>\r\n        result.json()\r\n      );\r\n      return results;\r\n    }\r\n  };\r\n\r\n  getMapDataGeoCountries = async (selectedCountryName?: string) => {\r\n    if (selectedCountryName) {\r\n      return fetch(\"data/world-countries-geo.json\").then((d: any) => {\r\n        let featureCollection = new FeatureCollection();\r\n        let countryData = d.default.features.filter((f: any) => {\r\n          return f.properties.name === selectedCountryName;\r\n        });\r\n        if (countryData && countryData.length > 0) {\r\n          for (let c = 0, cl = countryData.length; c < cl; c++) {\r\n            let cd = countryData[c] as any;\r\n            featureCollection.features.push(cd);\r\n          }\r\n        }\r\n        return new Promise((resolve) => {\r\n          resolve(featureCollection);\r\n        });\r\n      });\r\n    } else {\r\n      let results = await fetch(\"data/world-countries-geo.json\").then(\r\n        (result) => result.json()\r\n      );\r\n      return results;\r\n    }\r\n  };\r\n\r\n  getStatesData = async () => {\r\n    return fetch(\"data/us-states.json\").then((d: any) => {\r\n      let statesData = Object.values(d).filter((s: any) => {\r\n        return s.stateCode && s;\r\n      });\r\n      return statesData;\r\n    });\r\n  };\r\n\r\n  getState = (featuresCollection: FeatureCollection, stateCode: string) => {\r\n    const state = featuresCollection.features.filter((f: any) => {\r\n      return f.properties.stateCode === stateCode;\r\n    });\r\n    if(state && state.length > 0){\r\n      return state[0];\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  getStateProvinceData = async (\r\n    selectedCountryCode: string,\r\n    selectedStateCode: string\r\n  ) => {\r\n    return fetch(\"data/world-stateprovinces.json\").then((d: any) => {\r\n      let statesData = Object.values(d).filter((s: any) => {\r\n        return (\r\n          s.countryCode === selectedCountryCode &&\r\n          s.stateCode === selectedStateCode\r\n        );\r\n      });\r\n      return statesData;\r\n    });\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { GeoDataService } from \"services/GeoDataService\";\r\n\r\nconst WorldMap: React.FC = () => {\r\n  const [geoData, setGeoData] = useState<any>();\r\n  const [mapTooltipContent, setMapTooltipContent] = useState<string>(\"\");\r\n\r\n  const geoDataService = new GeoDataService();\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      let data = await geoDataService.getMapDataGeoCountries();\r\n      setGeoData(data);\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\">\r\n        <Geographies geography={geoData}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                geography={geo}\r\n                stroke=\"#ffffff\"\r\n                fill=\"#e0e0e0\"\r\n                onMouseEnter={() => {\r\n                  setMapTooltipContent(\r\n                    `${geo.properties.countrycode} — ${geo.properties.name}`\r\n                  );\r\n                }}\r\n                onMouseLeave={() => {\r\n                  setMapTooltipContent(\"\");\r\n                }}\r\n                style={{\r\n                  default: {\r\n                    fill: \"#e0e0e0\",\r\n                    outline: \"none\",\r\n                  },\r\n                  hover: {\r\n                    fill: \"#bbdefb\",\r\n                    outline: \"none\",\r\n                  },\r\n                  pressed: {\r\n                    fill: \"#1e88e5\",\r\n                    outline: \"none\",\r\n                  },\r\n                }}\r\n              />\r\n            ))\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n      <ReactTooltip>{mapTooltipContent}</ReactTooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n"],"sourceRoot":""}